/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package view;

import circuit.Circuit;
import circuit.CircuitElement;
import circuit.Node;
import java.awt.event.ItemEvent;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 *
 * @author Daniel
 */
public class ConnectionPanel extends javax.swing.JPanel {

    /**
     * Creates new form ConnectionEditor
     */
    public ConnectionPanel(CircuitElement element) {
        if(element == null)
            throw new IllegalArgumentException("Can't edit null element");
        
        initComponents();
        _element = element;
        
        _initializing = true;
        int inputCount = _element.getGate().inputCount();
        _inputConnections = new Integer[inputCount];
        Map<Integer, Integer> originalInputConnections = _element.getInputConnections();
        for(int i = 0; i < inputCount; ++i) {
            inputComboBox.addItem(_element.getGate().getInputName(i));
            _inputConnections[i] = originalInputConnections.get(i);
        }
        
        _allElements = _element.getCircuit().getAllElements();
        _comboBoxToConnectionIndexes = new ArrayList<>();
        for(int i = 0; i < _allElements.length; ++i) {
            if(_allElements[i].getId() != _element.getId()) {
                _comboBoxToConnectionIndexes.add(i);
                connectionComboBox.addItem(_allElements[i].getGateName());
            }
        }
        
        _initializing = false;
        
        updateConnectionSelection();
    }
    
    public void saveChanges() {
        Circuit circuit = _element.getCircuit();
        circuit.removeAllInputs(_element.getId());
        for(int i = 0; i < _inputConnections.length; ++i) {
            if(_inputConnections[i] != null)
                circuit.addConnection(_inputConnections[i], 
                        new Node(_element.getId(), i));
        }
    }

    private CircuitElement _element;
    private CircuitElement[] _allElements;
    private Integer[] _inputConnections;
    private List<Integer> _comboBoxToConnectionIndexes;
    private boolean _initializing;
    
    private int findElementInComboBox(int id) {
        for(int i = 0; i < _comboBoxToConnectionIndexes.size(); ++i) {
            int index = _comboBoxToConnectionIndexes.get(i);
            if(_allElements[index].getId() == id)
                return i;
        }
        
        return -1;
    }
    
    private void updateConnectionSelection() {
        int index = inputComboBox.getSelectedIndex();
        if(index == -1)
            return;
        
        int connectionIndex = _inputConnections[index] != null ?
                findElementInComboBox(_inputConnections[index]) : -1;
        connectionComboBox.setSelectedIndex(connectionIndex);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        connectionComboBox = new javax.swing.JComboBox();
        inputComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        connectionComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                connectionComboBoxItemStateChanged(evt);
            }
        });

        inputComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                inputComboBoxItemStateChanged(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Entrada");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Conexi√≥n");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                    .addComponent(inputComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(connectionComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(connectionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void inputComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_inputComboBoxItemStateChanged
        if(_initializing || evt.getStateChange() != ItemEvent.SELECTED)
            return;
        
        updateConnectionSelection();
    }//GEN-LAST:event_inputComboBoxItemStateChanged

    private void connectionComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_connectionComboBoxItemStateChanged
        if(_initializing || evt.getStateChange() != ItemEvent.SELECTED)
            return;
        
        int inputIndex = inputComboBox.getSelectedIndex();
        if(inputIndex == -1)
            return;
        
        int connectionIndex = connectionComboBox.getSelectedIndex();
        
        _inputConnections[inputIndex] = connectionIndex == -1 ? null : 
                _allElements[_comboBoxToConnectionIndexes.get(connectionIndex)].getId();
    }//GEN-LAST:event_connectionComboBoxItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox connectionComboBox;
    private javax.swing.JComboBox inputComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
